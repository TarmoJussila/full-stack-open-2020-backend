{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PersonForm","props","onSubmit","value","nameValue","onChange","onNameChange","numberValue","onNumberChange","type","PersonList","persons","onDeletePerson","map","person","Person","name","number","onClick","Filter","filterValue","onFilterChange","Notification","message","isError","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","catch","error","setTimeout","filteredPersons","length","filter","toLowerCase","includes","event","target","preventDefault","some","window","confirm","find","changedPerson","returnedPerson","personObject","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbd36ce5.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n  const [ successMessage, setSuccessMessage ] = useState(null)\r\n  const [ errorMessage, setErrorMessage ] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(`Person data could not be received from the server!`)\r\n        setTimeout(() => { setErrorMessage(null) }, 5000)\r\n      })\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    if (persons.some(person => person.name.toLowerCase() === newName.toLowerCase())) {\r\n      if (window.confirm(`The name ${newName} is already added to the phonebook. Do you wish to replace the old number with a new one?`)) {\r\n        const person = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\r\n        const changedPerson = { ...person, number: newNumber }\r\n\r\n        personService\r\n          .update(changedPerson.id, changedPerson)\r\n          .then(returnedPerson => {\r\n            setSuccessMessage(`Person '${changedPerson.name}' was successfully updated!`)\r\n            setTimeout(() => { setSuccessMessage(null)}, 5000)\r\n            setPersons(persons.map(person => person.name.toLowerCase() !== newName.toLowerCase() ? person : returnedPerson))\r\n          })\r\n          .catch(error => {\r\n            setErrorMessage(`Person '${changedPerson.name}' has been already removed from the server!`)\r\n            setTimeout(() => { setErrorMessage(null) }, 5000)\r\n            setPersons(persons.filter(person => person.id !== changedPerson.id))\r\n          })\r\n      }\r\n      return\r\n    }\r\n\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    personService\r\n      .create(personObject)\r\n      .then(returnedPerson => {\r\n        setSuccessMessage(`Person '${personObject.name}' was successfully added!`)\r\n        setTimeout(() => { setSuccessMessage(null)}, 5000)\r\n        setPersons(persons.concat(returnedPerson))\r\n        setNewName('')\r\n        setNewNumber('')\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(`Person '${personObject.name}' could not be added to the server!`)\r\n        setTimeout(() => { setErrorMessage(null) }, 5000)\r\n      })\r\n  }\r\n\r\n  const deletePerson = (id, name) => {\r\n    if (window.confirm(`Are you sure you want to delete ${name}?`)) {\r\n      personService\r\n        .remove(id)\r\n        .then(() => {\r\n          setSuccessMessage(`Person '${name}' was successfully deleted!`)\r\n          setTimeout(() => { setSuccessMessage(null)}, 5000)\r\n          setPersons(persons.filter(person => person.id !== id))\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(`Person '${name}' has been already removed from the server!`)\r\n          setTimeout(() => { setErrorMessage(null) }, 5000)\r\n          setPersons(persons.filter(person => person.id !== id))\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  const filteredPersons = newFilter.length === 0\r\n    ? persons\r\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={successMessage} isError={false} />\r\n      <Notification message={errorMessage} isError={true} />\r\n      <Filter filterValue={newFilter} onFilterChange={handleFilterChange} />\r\n      <h3>Add a new</h3>\r\n      <PersonForm onSubmit={addPerson} nameValue={newName} numberValue={newNumber} onNameChange={handleNameChange} onNumberChange={handleNumberChange} />\r\n      <h3>Numbers</h3>\r\n      <PersonList persons={filteredPersons} onDeletePerson={deletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n      <div>\r\n        Name: <input value={props.nameValue} onChange={props.onNameChange} />\r\n      </div>\r\n      <div>\r\n        Number: <input value={props.numberValue} onChange={props.onNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst PersonList = ({ persons, onDeletePerson }) => {\r\n  return (\r\n    <div>\r\n      {persons.map(person =>\r\n        <Person key={person.id} person={person} onDeletePerson={onDeletePerson} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Person = ({ person, onDeletePerson }) => {\r\n  const handleDeletePerson = () => {\r\n    onDeletePerson(person.id, person.name)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>\r\n        {person.name} {person.number} {' '}\r\n        <input type=\"submit\" value=\"Delete\" onClick={handleDeletePerson} />\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n      Filter shown with: <input value={props.filterValue} onChange={props.onFilterChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Notification = ({ message, isError }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  if (!isError) {\r\n    return (\r\n      <div className=\"success\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}